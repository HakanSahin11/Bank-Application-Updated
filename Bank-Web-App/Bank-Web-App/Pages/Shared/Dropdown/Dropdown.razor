@namespace Bank_Web_App.Pages.Shared

@using Microsoft.AspNetCore.Components.Web
@typeparam TItem

<div class="dropdown @(Class ?? string.Empty)">
    <button class="btn btn-light border border-dark dropdown-toggle @(Class ?? string.Empty)" data-toggle="dropdown" type="button" @onclick="ToggleDropdown"
            aria-haspopup="true" aria-expanded="@show.ToString().ToLower()">
        @Tip
    </button>
    <CascadingValue Value="this">
        <div class="dropdown-menu @(show ? "show" : "") @(Class ?? string.Empty)">
            @ChildContent
        </div>
    </CascadingValue>
</div>

@code {
    [Parameter]
    public RenderFragment InitialTip { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public EventCallback<TItem> OnSelected { get; set; }

    [Parameter]
    public string Class { get; set; }

    [Parameter]
    public TItem Value { get; set; }

    [Parameter]
    public EventCallback<TItem> ValueChanged { get; set; }

    private bool show = false;
    private RenderFragment Tip;

    private void ToggleDropdown()
    {
        show = !show;
    }

    protected override void OnInitialized()
    {
        Tip = InitialTip;
    }

    public async Task HandleSelect(TItem item, RenderFragment<TItem> contentFragment)
    {
        Tip = contentFragment(item);
        show = false;
        StateHasChanged();
        if (ValueChanged.HasDelegate)
        {
            await ValueChanged.InvokeAsync(item);
        }
        await OnSelected.InvokeAsync(item);
    }
}