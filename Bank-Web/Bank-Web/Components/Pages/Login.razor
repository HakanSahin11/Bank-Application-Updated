@page "/Login"
@rendermode InteractiveServer

@using Bank_Web.Helpers
@using Bank_Web.Services

@inject IHttpClientService HttpClientService
@inject ILocalStorageService LocalStorageService

<PageTitle>Login</PageTitle>

<div class="login-container">
    <div class="login-content">
        <h2>Log in</h2>
        <div class="form-group">
            <label for="Email">Email</label>
            <input type="Email" id="Email" class="form-control" @bind="Email" />
        </div>
        <div class="form-group">
            <label for="Password">Password</label>
            <input type="Password" id="Password" class="form-control" @bind="Password" />
        </div>
        <button class="btn btn-primary" @onclick="SendLogin">Login</button>

        <hr />

        <div class="form-group">
            <button class="btn btn-link" @onclick="ForgotPassword">Forgot Password?</button>
        </div>

        <div class="form-group">
            <button class="btn btn-link" @onclick="CreateAccount">Create Account</button>
        </div>
    </div>
</div>

@code {

    private string Email = string.Empty;
    private string Password = string.Empty;

    private async Task SendLogin()
    {
        Console.WriteLine("Test");

        var loginRequest = new SharedClasses.Models.LoginRequest(Email, Password);

        var result = await HttpClientService.SendHttpPostRequest<SharedClasses.Models.UserLoginResponse>(IHttpClientService.Endpoints.UserAuthentication, "", loginRequest);

        if (result != null && !string.IsNullOrEmpty(result.Token))
        {

            await LocalStorageService.SetItem<string>("AuthToken", result.Token);
        }
    }

    private async Task ForgotPassword()
    {
        Console.WriteLine("Test 2");

    }

    private async Task CreateAccount()
    {
        Console.WriteLine("Test 3");

    }
}